openapi: 3.0.1
info:
  title: "TheHive API"
  version: "5" 
  description: |
    This API allows interaction with TheHive platform for managing alerts, cases,
    observables, tasks, users, and other entities.

servers:
  - url: http://localhost:9000/api 
    description: Development server
  - url: "{scheme}://{host}:{port}/api"
    description: Generic TheHive server
    variables:
      scheme:
        default: "https"
        enum: ["http", "https"]
      host:
        default: "your-thehive-instance.com"
      port:
        default: "9000"
        enum: ["9000", "443"]

components:
  securitySchemes:
    apiKeyAuth:
      type: http
      scheme: bearer
      description: API Key authentication (Bearer token). TheHive uses 'Bearer {apikey}'.
    basicAuth:
      type: http
      scheme: basic
      description: Basic username/password authentication.

  parameters:
    OrganisationHeader:
      name: X-Organisation
      in: header
      description: Specifies the organisation context for the request.
      required: false
      schema:
        type: string
    AlertIdPathParameter:
      name: alert_id
      in: path
      required: true
      description: The ID of the alert.
      schema:
        type: string
    CaseIdPathParameter:
      name: case_id
      in: path
      required: true
      description: The ID or number of the case.
      schema:
        oneOf:
          - type: string
          - type: integer
    CaseTemplateIdPathParameter:
      name: case_template_id
      in: path
      required: true
      description: The ID of the case template.
      schema:
        type: string
    CommentIdPathParameter:
      name: comment_id
      in: path
      required: true
      description: The ID of the comment.
      schema:
        type: string
    CustomFieldIdPathParameter:
      name: custom_field_id
      in: path
      required: true
      description: The ID of the custom field definition or instance.
      schema:
        type: string
    ObservableIdPathParameter:
      name: observable_id
      in: path
      required: true
      description: The ID of the observable.
      schema:
        type: string
    ObservableTypeIdPathParameter:
      name: observable_type_id
      in: path
      required: true
      description: The ID of the observable type.
      schema:
        type: string
    OrganisationIdPathParameter:
      name: org_id 
      in: path
      required: true
      description: The ID of the organisation.
      schema:
        type: string
    ProcedureIdPathParameter:
      name: procedure_id
      in: path
      required: true
      description: The ID of the procedure.
      schema:
        type: string
    ProfileIdPathParameter:
      name: profile_id
      in: path
      required: true
      description: The ID of the profile.
      schema:
        type: string
    TaskIdPathParameter:
      name: task_id
      in: path
      required: true
      description: The ID of the task.
      schema:
        type: string
    TaskLogIdPathParameter:
      name: task_log_id
      in: path
      required: true
      description: The ID of the task log.
      schema:
        type: string
    UserIdPathParameter:
      name: user_id
      in: path
      required: true
      description: The ID of the user.
      schema:
        type: string
    AttachmentIdPathParameter:
      name: attachment_id
      in: path
      required: true
      description: The ID of the attachment.
      schema:
        type: string
    PageIdPathParameter:
      name: page_id
      in: path
      required: true
      description: The ID of the page.
      schema:
        type: string
    ShareIdPathParameter:
      name: share_id
      in: path
      required: true
      description: The ID of the share record.
      schema:
        type: string
    EventIdPathParameter: 
      name: event_id
      in: path
      required: true
      description: The ID of the custom timeline event.
      schema:
        type: string
    AnalyzerIdPathParameter:
      name: analyzer_id
      in: path
      required: true
      description: The ID of the Cortex analyzer.
      schema:
        type: string
    AnalyzerJobIdPathParameter:
      name: job_id 
      in: path
      required: true
      description: The ID of the Cortex analyzer job.
      schema:
        type: string

  responses:
    BadRequest:
      description: Bad Request - The server could not understand the request due to invalid syntax.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Unauthorized - Authentication is required and has failed or has not yet been provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Forbidden - The server understood the request, but is refusing to fulfill it.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Not Found - The server has not found anything matching the Request-URI.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: Internal Server Error - The server encountered an unexpected condition.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    DeletionSuccess:
      description: Resource deleted successfully.
      content: {} 
    UpdateSuccess:
      description: Resource updated successfully.
      content: {} 

  schemas:
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          description: The type of error.
        message:
          type: string
          description: A human-readable message providing more details about the error.

    InputCustomFieldValue:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        value: {} 
        order:
          type: integer
          nullable: true

    OutputCustomFieldValue:
      type: object
      required:
        - _id
        - name
        - description
        - type
        - value 
        - order
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        type:
          type: string
        value: {} 
        order:
          type: integer

    InputCustomField:
      type: object
      required:
        - name
        - group
        - description
        - type
      properties:
        name:
          type: string
        displayName:
          type: string
          nullable: true
        group:
          type: string
        description:
          type: string
        type:
          type: string 
        mandatory:
          type: boolean
          default: false
        options:
          type: array
          items:
            type: string 
          nullable: true

    OutputCustomField:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - name
        - displayName
        - group
        - description
        - type
        - mandatory
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        displayName:
          type: string
        group:
          type: string
        description:
          type: string
        type:
          type: string
        mandatory:
          type: boolean
        options:
          type: array
          items:
            type: string
          nullable: true

    InputUpdateCustomField:
      type: object
      properties:
        displayName:
          type: string
        group:
          type: string
        description:
          type: string
        type:
          type: string
        options:
          type: array
          items:
            type: string
        mandatory:
          type: boolean

    InputObservable:
      type: object
      required:
        - dataType
      properties:
        dataType:
          type: string
        data:
          type: string
          nullable: true 
        message:
          type: string
          nullable: true
        startDate:
          type: integer
          format: int64
          description: Epoch milliseconds
          nullable: true
        tlp:
          type: integer
          enum: [0, 1, 2, 3, 4] 
          nullable: true
        pap:
          type: integer
          enum: [0, 1, 2, 3]
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        ioc:
          type: boolean
          default: false
        sighted:
          type: boolean
          default: false
        sightedAt:
          type: integer
          format: int64
          description: Epoch milliseconds
          nullable: true
        ignoreSimilarity:
          type: boolean
          default: false
        isZip: 
          type: boolean
          default: false
        zipPassword: 
          type: string 
          nullable: true
        attachment: 
          type: string
          nullable: true

    OutputObservable:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - dataType
        - startDate
        - tlp
        - tlpLabel
        - pap
        - papLabel
        - ioc
        - sighted
        - reports
        - extraData
        - ignoreSimilarity
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        dataType:
          type: string
        data:
          type: string
          nullable: true
        attachment:
          $ref: '#/components/schemas/OutputAttachment'
          nullable: true
        message:
          type: string
          nullable: true
        startDate:
          type: integer
          format: int64
        tlp:
          type: integer
        tlpLabel:
          type: string
        pap:
          type: integer
        papLabel:
          type: string
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: int64
          nullable: true
        reports:
          type: object
          additionalProperties: true 
        extraData:
          type: object
          additionalProperties: true
        ignoreSimilarity:
          type: boolean
        tags:
          type: array
          items:
            type: string
          nullable: true

    InputUpdateObservable:
      type: object
      properties:
        dataType:
          type: string
        message:
          type: string
        tlp:
          type: integer
        pap:
          type: integer
        tags:
          type: array
          items:
            type: string
        ioc:
          type: boolean
        sighted:
          type: boolean
        sightedAt:
          type: integer
          format: int64
        ignoreSimilarity:
          type: boolean

    InputBulkUpdateObservable:
      allOf:
        - $ref: '#/components/schemas/InputUpdateObservable'
        - type: object
          required:
            - ids
          properties:
            ids:
              type: array
              items:
                type: string

    InputProcedure:
      type: object
      required:
        - occurDate
        - patternId
      properties:
        occurDate:
          type: integer
          format: int64
          description: Epoch milliseconds
        patternId:
          type: string
          description: MITRE ATT&CK pattern ID (e.g., T1566)
        tactic:
          type: string
          nullable: true
        description:
          type: string
          nullable: true

    OutputProcedure:
      type: object
      required:
        - _id
        - _createdAt
        - _createdBy
        - occurDate
        - tactic
        - tacticLabel
        - extraData
      properties:
        _id:
          type: string
        _createdAt:
          type: integer
          format: int64
        _createdBy:
          type: string
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        _updatedBy:
          type: string
          nullable: true
        occurDate:
          type: integer
          format: int64
        tactic:
          type: string
        tacticLabel:
          type: string
        description:
          type: string
          nullable: true
        patternId:
          type: string
          nullable: true
        patternName:
          type: string
          nullable: true
        extraData:
          type: object
          additionalProperties: true

    InputUpdateProcedure:
      type: object
      properties:
        description:
          type: string
        occurDate:
          type: integer
          format: int64

    InputAlert:
      type: object
      required:
        - type
        - source
        - sourceRef
        - title
        - description
      properties:
        type:
          type: string
        source:
          type: string
        sourceRef:
          type: string
        title:
          type: string
        description:
          type: string
        date:
          type: integer
          format: int64
          nullable: true
        externalLink:
          type: string
          nullable: true
        severity:
          type: integer
          enum: [1, 2, 3, 4] 
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        flag:
          type: boolean
          default: false
        tlp:
          type: integer
          enum: [0, 1, 2, 3, 4]
          nullable: true
        pap:
          type: integer
          enum: [0, 1, 2, 3]
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
          nullable: true
        summary:
          type: string
          nullable: true
        status:
          type: string 
          nullable: true
        assignee:
          type: string 
          nullable: true
        caseTemplate:
          type: string 
          nullable: true
        observables:
          type: array
          items:
            $ref: '#/components/schemas/InputObservable'
          nullable: true
        procedures:
          type: array
          items:
            $ref: '#/components/schemas/InputProcedure'
          nullable: true

    OutputAlert:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - type
        - source
        - sourceRef
        - title
        - description
        - severity
        - severityLabel
        - date
        - tlp
        - tlpLabel
        - pap
        - papLabel
        - follow
        - observableCount
        - status
        - stage
        - extraData
        - newDate
        - timeToDetect
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        type:
          type: string
        source:
          type: string
        sourceRef:
          type: string
        externalLink:
          type: string
          nullable: true
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
        severityLabel:
          type: string
        date:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
          nullable: true
        tlp:
          type: integer
        tlpLabel:
          type: string
        pap:
          type: integer
        papLabel:
          type: string
        follow:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
          nullable: true
        status:
          type: string
        summary:
          type: string
          nullable: true
        assignee:
          type: string
          nullable: true
        caseTemplate:
          type: string
          nullable: true
        caseId:
          type: string
          nullable: true
        observableCount:
          type: integer
        stage:
          type: string
        extraData:
          type: object
          additionalProperties: true
        newDate:
          type: integer
          format: int64
        inProgressDate:
          type: integer
          format: int64
          nullable: true
        closedDate:
          type: integer
          format: int64
          nullable: true
        importedDate:
          type: integer
          format: int64
          nullable: true
        timeToDetect:
          type: integer
          format: int64
        timeToTriage:
          type: integer
          format: int64
          nullable: true
        timeToQualify:
          type: integer
          format: int64
          nullable: true
        timeToAcknowledge:
          type: integer
          format: int64
          nullable: true

    InputUpdateAlert:
      type: object
      properties:
        type:
          type: string
        source:
          type: string
        sourceRef:
          type: string
        externalLink:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
        date:
          type: integer
          format: int64
        lastSyncDate:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
        tlp:
          type: integer
        pap:
          type: integer
        follow:
          type: boolean
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        status:
          type: string
        summary:
          type: string
        assignee:
          type: string
        addTags:
          type: array
          items:
            type: string
        removeTags:
          type: array
          items:
            type: string

    InputBulkUpdateAlert:
      allOf:
        - $ref: '#/components/schemas/InputUpdateAlert'
        - type: object
          required:
            - ids
          properties:
            ids:
              type: array
              items:
                type: string

    InputPromoteAlert: 
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
        pap:
          type: integer
        status:
          type: string 
        summary:
          type: string
        assignee:
          type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        caseTemplate:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputTask'
        pages:
          type: array
          items:
            $ref: '#/components/schemas/InputCasePage'
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
        taskRule:
          type: string
        observableRule:
          type: string

    
    OutputAttachment:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - name
        - size
        - contentType
        - id 
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        size:
          type: integer
        contentType:
          type: string
        id:
          type: string
        hashes:
          type: array
          items:
            type: string
          nullable: true

    CaseStatusValue:
      type: string
      enum: ["New", "InProgress", "Indeterminate", "FalsePositive", "TruePositive", "Other", "Duplicated"]
    ImpactStatusValue:
      type: string
      enum: ["NotApplicable", "WithImpact", "NoImpact"]

    InputCase:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
          enum: [1, 2, 3, 4]
          nullable: true
        startDate:
          type: integer
          format: int64
          nullable: true
        endDate:
          type: integer
          format: int64
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        flag:
          type: boolean
          default: false
        tlp:
          type: integer
          enum: [0, 1, 2, 3, 4]
          nullable: true
        pap:
          type: integer
          enum: [0, 1, 2, 3]
          nullable: true
        status:
          $ref: '#/components/schemas/CaseStatusValue'
          nullable: true
        summary:
          type: string
          nullable: true
        assignee:
          type: string
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
          nullable: true
        caseTemplate:
          type: string
          nullable: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputTask'
          nullable: true
        pages:
          type: array
          items:
            $ref: '#/components/schemas/InputCasePage'
          nullable: true
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
          nullable: true
        taskRule:
          type: string
          nullable: true
        observableRule:
          type: string
          nullable: true

    OutputCase:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - number
        - title
        - description
        - severity
        - severityLabel
        - startDate
        - flag
        - tlp
        - tlpLabel
        - pap
        - papLabel
        - status
        - stage
        - extraData
        - newDate
        - timeToDetect
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        number:
          type: integer
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
        severityLabel:
          type: string
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        flag:
          type: boolean
        tlp:
          type: integer
        tlpLabel:
          type: string
        pap:
          type: integer
        papLabel:
          type: string
        status:
          $ref: '#/components/schemas/CaseStatusValue'
        stage:
          type: string
        summary:
          type: string
          nullable: true
        impactStatus:
          $ref: '#/components/schemas/ImpactStatusValue'
          nullable: true
        assignee:
          type: string
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue'
          nullable: true
        userPermissions:
          type: array
          items:
            type: string
          nullable: true
        extraData:
          type: object
          additionalProperties: true
        newDate:
          type: integer
          format: int64
        inProgressDate:
          type: integer
          format: int64
          nullable: true
        closedDate:
          type: integer
          format: int64
          nullable: true
        alertDate:
          type: integer
          format: int64
          nullable: true
        alertNewDate:
          type: integer
          format: int64
          nullable: true
        alertInProgressDate:
          type: integer
          format: int64
          nullable: true
        alertImportedDate:
          type: integer
          format: int64
          nullable: true
        timeToDetect:
          type: integer
          format: int64
        timeToTriage:
          type: integer
          format: int64
          nullable: true
        timeToQualify:
          type: integer
          format: int64
          nullable: true
        timeToAcknowledge:
          type: integer
          format: int64
          nullable: true
        timeToResolve:
          type: integer
          format: int64
          nullable: true
        handlingDuration:
          type: integer
          format: int64
          nullable: true

    InputUpdateCase:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        severity:
          type: integer
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
        tags:
          type: array
          items:
            type: string
        flag:
          type: boolean
        tlp:
          type: integer
        pap:
          type: integer
        status:
          $ref: '#/components/schemas/CaseStatusValue'
        summary:
          type: string
        assignee:
          type: string
        impactStatus:
          $ref: '#/components/schemas/ImpactStatusValue'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
        taskRule:
          type: string
        observableRule:
          type: string
        addTags:
          type: array
          items:
            type: string
        removeTags:
          type: array
          items:
            type: string

    InputBulkUpdateCase:
      allOf:
        - $ref: '#/components/schemas/InputUpdateCase'
        - type: object
          required:
            - ids
          properties:
            ids:
              type: array
              items:
                type: string 

    InputImportCase:
      type: object
      required:
        - password
      properties:
        password:
          type: string
        sharingParameters:
          type: array
          items:
            $ref: '#/components/schemas/InputShare'
          nullable: true
        taskRule:
          type: string
          nullable: true
        observableRule:
          type: string
          nullable: true

    InputApplyCaseTemplate:
      type: object
      required:
        - ids
        - caseTemplate
      properties:
        ids:
          type: array
          items:
            type: string 
        caseTemplate:
          type: string 
        updateTitlePrefix:
          type: boolean
          nullable: true
        updateDescription:
          type: boolean
          nullable: true
        updateTags:
          type: boolean
          nullable: true
        updateSeverity:
          type: boolean
          nullable: true
        updateFlag:
          type: boolean
          nullable: true
        updateTlp:
          type: boolean
          nullable: true
        updatePap:
          type: boolean
          nullable: true
        updateCustomFields:
          type: boolean
          nullable: true
        importTasks:
          type: array
          items:
            type: string 
          nullable: true
        importPages:
          type: array
          items:
            type: string 
          nullable: true

    
    SeverityValue:
      type: integer
      enum: [1, 2, 3, 4]
    TlpValue:
      type: integer
      enum: [0, 1, 2, 3, 4]
    PapValue:
      type: integer
      enum: [0, 1, 2, 3]

    InputCaseTemplate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        displayName:
          type: string
          nullable: true
        titlePrefix:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        severity:
          $ref: '#/components/schemas/SeverityValue'
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        flag:
          type: boolean
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpValue'
          nullable: true
        pap:
          $ref: '#/components/schemas/PapValue'
          nullable: true
        summary:
          type: string
          nullable: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/InputTask'
          nullable: true
        pageTemplateIds: 
          type: array
          items:
            type: string
          nullable: true
        customFields: 
          type: array
          items:
            $ref: '#/components/schemas/InputCustomFieldValue'
          nullable: true

    OutputCaseTemplate:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - name
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        displayName:
          type: string
          nullable: true
        titlePrefix:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        severity:
          $ref: '#/components/schemas/SeverityValue'
          nullable: true
        tags:
          type: array
          items:
            type: string
          nullable: true
        flag:
          type: boolean
          nullable: true
        tlp:
          $ref: '#/components/schemas/TlpValue'
          nullable: true
        pap:
          $ref: '#/components/schemas/PapValue'
          nullable: true
        summary:
          type: string
          nullable: true
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/OutputTask' 
          nullable: true
        pageTemplateIds:
          type: array
          items:
            type: string
          nullable: true
        customFields: 
          type: array
          items:
            $ref: '#/components/schemas/OutputCustomFieldValue' 
          nullable: true

    
    InputComment:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    OutputComment:
      type: object
      required:
        - _id
        - _type
        - createdBy
        - createdAt
        - message
        - isEdited
      properties:
        _id:
          type: string
        _type:
          type: string
        createdBy:
          type: string 
        createdAt:
          type: integer
          format: int64
        updatedAt: 
          type: integer
          format: int64
          nullable: true
        message:
          type: string
        isEdited:
          type: boolean

    InputUpdateComment:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    
    OutputAnalyzer:
      type: object
      required:
        - id
        - name
        - version
        - description
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        dataTypeList:
          type: array
          items:
            type: string
          nullable: true
        cortexIds: 
          type: array
          items:
            type: string
          nullable: true

    OutputResponder:
      type: object
      required:
        - id
        - name
        - version
        - description
      properties:
        id:
          type: string
        name:
          type: string
        version:
          type: string
        description:
          type: string
        dataTypeList:
          type: array
          items:
            type: string
          nullable: true
        cortexIds:
          type: array
          items:
            type: string
          nullable: true

    OutputAnalyzerJob: 
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - analyzerId
        - analyzerName
        - analyzerDefinition 
        - status 
        - startDate
        - cortexId 
        - cortexJobId 
        - id 
        - operations 
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt: 
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt: 
          type: integer
          format: int64
          nullable: true
        analyzerId:
          type: string
        analyzerName:
          type: string
        analyzerDefinition:
          type: string
        status:
          type: string
        startDate: 
          type: integer
          format: int64
        endDate: 
          type: integer
          format: int64
          nullable: true
        cortexId:
          type: string
        cortexJobId:
          type: string
        id:
          type: string
        operations:
          type: string 
          nullable: true
        report:
          type: object
          additionalProperties: true 
          nullable: true
        case_artifact: 
          type: object
          additionalProperties: true
          nullable: true

    OutputResponderAction:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - responderId
        - status
        - startDate
        - cortexId
        - cortexJobId
        - id
        - operations
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt: 
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt: 
          type: integer
          format: int64
          nullable: true
        responderId:
          type: string
        responderName:
          type: string
          nullable: true
        responderDefinition:
          type: string
          nullable: true
        status:
          type: string
        startDate: 
          type: integer
          format: int64
        endDate: 
          type: integer
          format: int64
          nullable: true
        cortexId:
          type: string
        cortexJobId:
          type: string
        id:
          type: string
        operations:
          type: string 
          nullable: true
        report:
          type: object
          additionalProperties: true
          nullable: true

    InputResponderAction:
      type: object
      required:
        - objectId 
        - objectType 
        - responderId
      properties:
        objectId:
          type: string
        objectType:
          type: string
        responderId:
          type: string
        parameters:
          type: object
          additionalProperties: true 
          nullable: true
        tlp:
          type: integer
          nullable: true

    InputAnalyzerJob:
      type: object
      required:
        - analyzerId
        - cortexId
        - artifactId 
      properties:
        analyzerId:
          type: string
        cortexId:
          type: string
        artifactId:
          type: string
        parameters:
          type: object
          additionalProperties: true 
          nullable: true

    
    InputObservableType:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        isAttachment:
          type: boolean
          default: false 

    OutputObservableType:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - name
        - isAttachment
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        isAttachment:
          type: boolean

    
    InputOrganisationLink:
      type: object
      properties:
        linkType:
          type: string 
        otherLinkType:
          type: string

    InputBulkOrganisationLink:
      type: object
      required:
        - toOrganisation 
        - linkType
        - otherLinkType
      properties:
        toOrganisation:
          type: string
        linkType:
          type: string
        otherLinkType:
          type: string

    OutputSharingProfile: 
      type: object
      required:
        - name
        - description
        - autoShare
        - editable
        - permissionProfile 
        - taskRule
        - observableRule
      properties:
        name:
          type: string
        description:
          type: string
        autoShare:
          type: boolean
        editable:
          type: boolean
        permissionProfile:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string

    InputOrganisation:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
        taskRule:
          type: string
          nullable: true
        observableRule:
          type: string
          nullable: true
        locked:
          type: boolean
          default: false

    OutputOrganisation:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - name
        - description
        - taskRule
        - observableRule
        - locked
        - extraData
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        description:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string
        locked:
          type: boolean
        extraData:
          type: object
          additionalProperties: true
        links: 
          type: array
          items:
            $ref: '#/components/schemas/InputOrganisationLink' 
          nullable: true
        avatar: 
          type: string
          nullable: true

    InputUpdateOrganisation:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        taskRule:
          type: string
        observableRule:
          type: string
        locked:
          type: boolean
        avatar:
          type: string

    
    InputCasePage:
      type: object
      required:
        - title
        - content
        - category
      properties:
        title:
          type: string
        content:
          type: string 
        category:
          type: string
        order:
          type: integer
          nullable: true

    OutputCasePage:
      type: object
      required:
        - _id
        - id 
        - createdBy
        - createdAt
        - title
        - content
        - _type 
        - slug
        - order
        - category
      properties:
        _id:
          type: string
        id:
          type: string
        createdBy:
          type: string
        createdAt:
          type: integer
          format: int64
        updatedBy:
          type: string
          nullable: true
        updatedAt:
          type: integer
          format: int64
          nullable: true
        title:
          type: string
        content:
          type: string
        _type:
          type: string
        slug:
          type: string
        order:
          type: integer
        category:
          type: string

    InputUpdateCasePage:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        category:
          type: string
        order:
          type: integer
    
    InputProfile:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        permissions:
          type: array
          items:
            type: string 
          nullable: true

    OutputProfile:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - name
        - editable
        - isAdmin
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
        editable:
          type: boolean
        isAdmin:
          type: boolean
        permissions:
          type: array
          items:
            type: string
          nullable: true

    InputUpdateProfile:
      type: object
      properties:
        name:
          type: string
        permissions:
          type: array
          items:
            type: string

    
    OutputShare: 
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - caseId 
        - profileName
        - organisationName
        - owner 
        - taskRule
        - observableRule
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        caseId:
          type: string
        profileName:
          type: string
        organisationName:
          type: string
        owner:
          type: boolean
        taskRule:
          type: string
        observableRule:
          type: string

    InputShare: 
      type: object
      required:
        - organisation 
      properties:
        organisation:
          type: string
        share: 
          type: boolean
          nullable: true
        profile: 
          type: string
          nullable: true
        taskRule:
          type: string
          nullable: true
        observableRule:
          type: string
          nullable: true
    
    InputTask:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        group:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string 
          nullable: true
        flag:
          type: boolean
          default: false
        startDate:
          type: integer
          format: int64
          nullable: true
        endDate:
          type: integer
          format: int64
          nullable: true
        order:
          type: integer
          nullable: true
        dueDate:
          type: integer
          format: int64
          nullable: true
        assignee:
          type: string 
          nullable: true
        mandatory:
          type: boolean
          default: false

    OutputTask:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - title
        - group
        - status
        - flag
        - order
        - mandatory
        - extraData
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        title:
          type: string
        group:
          type: string
        description:
          type: string
          nullable: true
        status:
          type: string
        flag:
          type: boolean
        startDate:
          type: integer
          format: int64
          nullable: true
        endDate:
          type: integer
          format: int64
          nullable: true
        order:
          type: integer
        assignee:
          type: string
          nullable: true
        dueDate:
          type: integer
          format: int64
          nullable: true
        mandatory:
          type: boolean
        extraData:
          type: object
          additionalProperties: true

    InputUpdateTask:
      type: object
      properties:
        title:
          type: string
        group:
          type: string
        description:
          type: string
        status:
          type: string
        flag:
          type: boolean
        startDate:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
        order:
          type: integer
        dueDate:
          type: integer
          format: int64
        assignee:
          type: string
        mandatory:
          type: boolean

    InputBulkUpdateTask:
      allOf:
        - $ref: '#/components/schemas/InputUpdateTask'
        - type: object
          required:
            - ids
          properties:
            ids:
              type: array
              items:
                type: string 
    
    InputTaskLog:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        startDate: 
          type: integer
          format: int64
          nullable: true
        includeInTimeline: 
          type: boolean 
          nullable: true

    OutputTaskLog:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - message
        - date 
        - owner 
        - extraData
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        message:
          type: string
        date:
          type: integer
          format: int64
        owner:
          type: string
        attachments: 
          type: array
          items:
            $ref: '#/components/schemas/OutputAttachment' 
          nullable: true
        includeInTimeline:
          type: boolean 
          nullable: true
        extraData:
          type: object
          additionalProperties: true

    InputUpdateTaskLog:
      type: object
      properties:
        message:
          type: string
        includeInTimeline:
          type: boolean

   
    OutputTimelineEvent: 
      type: object
      required:
        - date
        - kind 
        - entity 
        - entityId
        - details 
      properties:
        date:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
          nullable: true
        kind:
          type: string
        entity:
          type: string
        entityId:
          type: string
        details:
          type: object
          additionalProperties: true

    OutputTimeline: 
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/OutputTimelineEvent'

    InputCustomEvent: 
      type: object
      required:
        - date
        - title
      properties:
        date:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
          nullable: true
        title:
          type: string
        description:
          type: string
          nullable: true

    OutputCustomEvent:
      type: object
      required:
        - _id
        - _type
        - _createdBy
        - _createdAt
        - date
        - title
      properties:
        _id:
          type: string
        _type:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        date:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
          nullable: true
        title:
          type: string
        description:
          type: string
          nullable: true

    InputUpdateCustomEvent:
      type: object
      properties:
        date:
          type: integer
          format: int64
        endDate:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string

    
    OutputOrganisationProfile: 
      type: object
      required:
        - organisationId
        - organisation 
        - profile 
      properties:
        organisationId:
          type: string
        organisation:
          type: string
        profile:
          type: string

    InputUser:
      type: object
      required:
        - login
        - name
        - profile 
      properties:
        login:
          type: string
        name:
          type: string
        profile:
          type: string
        email:
          type: string
          format: email
          nullable: true
        password:
          type: string
          format: password
          nullable: true 
        organisation: 
          type: string
          nullable: true
        type: 
          type: string
          nullable: true

    OutputUser:
      type: object
      required:
        - _id
        - _createdBy
        - _createdAt
        - login
        - name
        - hasKey 
        - hasPassword
        - hasMFA
        - locked
        - profile 
        - organisation 
        - type
        - extraData
      properties:
        _id:
          type: string
        _createdBy:
          type: string
        _createdAt:
          type: integer
          format: int64
        _updatedBy:
          type: string
          nullable: true
        _updatedAt:
          type: integer
          format: int64
          nullable: true
        login:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
          nullable: true
        hasKey:
          type: boolean
        hasPassword:
          type: boolean
        hasMFA:
          type: boolean
        locked:
          type: boolean
        profile:
          type: string
        organisation:
          type: string
        type:
          type: string
        permissions: 
          type: array
          items:
            type: string
          nullable: true
        avatar: 
          type: string
          nullable: true
        organisations: 
          type: array
          items:
            $ref: '#/components/schemas/OutputOrganisationProfile'
          nullable: true
        defaultOrganisation: 
          type: string
          nullable: true
        extraData:
          type: object
          additionalProperties: true

    InputUpdateUser:
      type: object
      properties:
        name:
          type: string
        organisation: 
          type: string
        profile: 
          type: string
        locked:
          type: boolean
        avatar:
          type: string
        email:
          type: string
          format: email
        defaultOrganisation: 
          type: string

    InputUserOrganisation: 
      type: object
      required:
        - organisation 
        - profile 
      properties:
        organisation:
          type: string
        profile:
          type: string
        default: 
          type: boolean
          nullable: true

    OutputUserOrganisation: 
      type: object
      required:
        - organisation 
        - profile
        - default
      properties:
        organisation:
          type: string
        profile:
          type: string
        default:
          type: boolean

    
    QueryFilterBase: 
      type: object
    QueryFilterLt:
      allOf:
        - $ref: '#/components/schemas/QueryFilterBase'
        - type: object
          properties:
            _lt:
              type: object
              properties:
                _field:
                  type: string
                _value: {}
    
    QuerySortItem:
      type: object
      additionalProperties:
        type: string
        enum: ["asc", "desc"]
    QuerySortExpr:
      type: object
      properties:
        _fields:
          type: array
          items:
            $ref: '#/components/schemas/QuerySortItem'
    QueryPaginate:
      type: object
      properties:
        from:
          type: integer
        to:
          type: integer
        extraData:
          type: array
          items: {}
          nullable: true
    QueryOperation: 
      type: object
      properties:
        _name:
          type: string 
      
      additionalProperties: true

    InputQuery:
      type: object
      properties:
        query:
          type: array
          items:
            $ref: '#/components/schemas/QueryOperation'
        excludeFields:
          type: array
          items:
            type: string
          nullable: true

security:
  - apiKeyAuth: []
  - basicAuth: []

tags:
  - name: Alert
    description: Operations related to alerts
  - name: Case
    description: Operations related to cases
  - name: CaseTemplate
    description: Operations related to case templates
  - name: Comment
    description: Operations related to comments
  - name: Cortex
    description: Operations related to Cortex integration (analyzers, responders)
  - name: CustomField
    description: Operations related to custom fields definitions
  - name: Observable
    description: Operations related to observables
  - name: ObservableType
    description: Operations related to observable type definitions
  - name: Organisation
    description: Operations related to organisations and sharing profiles
  - name: Procedure
    description: Operations related to MITRE ATT&CK procedures
  - name: Profile
    description: Operations related to user permission profiles
  - name: Query
    description: Generic query endpoint for various entities
  - name: Task
    description: Operations related to case tasks
  - name: TaskLog
    description: Operations related to task logs
  - name: Timeline
    description: Operations related to case timelines and custom events
  - name: User
    description: Operations related to users

paths:
  /v1/alert:
    post:
      tags: [Alert]
      summary: Create an alert
      operationId: createAlert
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAlert'
          multipart/form-data: 
            schema:
              type: object
              properties:
                _json: 
                  type: string
                  description: JSON string of the InputAlert object.
            encoding:
              _json:
                contentType: application/json
      responses:
        '201':
          description: Alert created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlert'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '500': { $ref: '#/components/responses/InternalServerError' }

  /v1/alert/{alert_id}:
    get:
      tags: [Alert]
      summary: Get an alert by ID
      operationId: getAlertById
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '200':
          description: Successful retrieval of an alert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAlert'
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }
    patch:
      tags: [Alert]
      summary: Update an alert
      operationId: updateAlert
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateAlert'
      responses:
        '204': { $ref: '#/components/responses/UpdateSuccess' }
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }
    delete:
      tags: [Alert]
      summary: Delete an alert
      operationId: deleteAlert
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204': { $ref: '#/components/responses/DeletionSuccess' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }
  /v1/alert/_bulk:
    patch:
      tags: [Alert]
      summary: Bulk update alerts
      operationId: bulkUpdateAlerts
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputBulkUpdateAlert'
      responses:
        '204': { $ref: '#/components/responses/UpdateSuccess' } 
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '500': { $ref: '#/components/responses/InternalServerError' }

  /v1/alert/delete/_bulk:
    post:
      tags: [Alert]
      summary: Bulk delete alerts
      operationId: bulkDeleteAlerts
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ids]
              properties:
                ids:
                  type: array
                  items:
                    type: string
      responses:
        '204': { $ref: '#/components/responses/DeletionSuccess' } 
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '500': { $ref: '#/components/responses/InternalServerError' }

  /v1/alert/{alert_id}/follow:
    post:
      tags: [Alert]
      summary: Follow an alert
      operationId: followAlert
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204':
          description: Successfully followed alert
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }

  /v1/alert/{alert_id}/unfollow:
    post:
      tags: [Alert]
      summary: Unfollow an alert
      operationId: unfollowAlert
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204':
          description: Successfully unfollowed alert
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }

  /v1/alert/{alert_id}/case:
    post:
      tags: [Alert]
      summary: Promote an alert to a case
      operationId: promoteAlertToCase
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputPromoteAlert'
      responses:
        '201':
          description: Case created from alert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }

  /v1/alert/{alert_id}/observable:
    post:
      tags: [Alert]
      summary: Create an observable in an alert
      operationId: createAlertObservable
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputObservable'
          multipart/form-data: 
            schema:
              type: object
              properties:
                _json: { type: string, description: "Serialized InputObservable JSON" }
                attachment: { type: string, format: binary }
            encoding:
              _json: { contentType: application/json }
      responses:
        '201':
          description: Observable created in alert
          content:
            application/json:
              schema:
                type: array 
                items:
                  $ref: '#/components/schemas/OutputObservable'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        '403': { $ref: '#/components/responses/Forbidden' }
        '404': { $ref: '#/components/responses/NotFound' }
        '500': { $ref: '#/components/responses/InternalServerError' }

  /v1/alert/{alert_id}/attachments:
    post:
      tags: [Alert]
      summary: Add attachments to an alert
      operationId: addAlertAttachments
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachments: 
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Attachments added
          content:
            application/json:
              schema:
                type: object 
                properties:
                  attachments:
                    type: array
                    items:
                      $ref: '#/components/schemas/OutputAttachment'
        '400': { $ref: '#/components/responses/BadRequest' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        
  /v1/alert/{alert_id}/attachment/{attachment_id}/download:
    get:
      tags: [Alert]
      summary: Download an alert attachment
      operationId: downloadAlertAttachment
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/AttachmentIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '200':
          description: Attachment file stream
          content:
            application/octet-stream: {}
        '401': { $ref: '#/components/responses/Unauthorized' }
        
  /v1/alert/{alert_id}/attachment/{attachment_id}:
    delete:
      tags: [Alert]
      summary: Delete an alert attachment
      operationId: deleteAlertAttachment
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/AttachmentIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204': { $ref: '#/components/responses/DeletionSuccess' }
        '401': { $ref: '#/components/responses/Unauthorized' }

  /v1/alert/{alert_id}/merge/{case_id}:
    post:
      tags: [Alert]
      summary: Merge an alert into an existing case
      operationId: mergeAlertIntoCase
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/CaseIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '200':
          description: Alert merged, returns updated case
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/alert/merge/_bulk:
    post:
      tags: [Alert]
      summary: Bulk merge alerts into a case
      operationId: bulkMergeAlertsIntoCase
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [caseId, alertIds]
              properties:
                caseId:
                  type: string
                alertIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Alerts merged, returns updated case
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400': { $ref: '#/components/responses/BadRequest' }
        

  /v1/alert/{alert_id}/procedure:
    post:
      tags: [Alert]
      summary: Create a procedure in an alert
      operationId: createAlertProcedure
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputProcedure'
      responses:
        '201':
          description: Procedure created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputProcedure'
        '400': { $ref: '#/components/responses/BadRequest' }
        
  /v1/case:
    post:
      tags: [Case]
      summary: Create a case
      operationId: createCase
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCase'
      responses:
        '201':
          description: Case created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '400': { $ref: '#/components/responses/BadRequest' }
        
  /v1/case/{case_id}:
    get:
      tags: [Case]
      summary: Get a case by ID or number
      operationId: getCaseById
      parameters:
        - $ref: '#/components/parameters/CaseIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '200':
          description: Successful retrieval of a case
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCase'
        '401': { $ref: '#/components/responses/Unauthorized' }
        
    patch:
      tags: [Case]
      summary: Update a case
      operationId: updateCase
      parameters:
        - $ref: '#/components/parameters/CaseIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateCase'
      responses:
        '204': { $ref: '#/components/responses/UpdateSuccess' }
        '400': { $ref: '#/components/responses/BadRequest' }
        
    delete:
      tags: [Case]
      summary: Delete a case
      operationId: deleteCase
      parameters:
        - $ref: '#/components/parameters/CaseIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204': { $ref: '#/components/responses/DeletionSuccess' }
        '401': { $ref: '#/components/responses/Unauthorized' }
        
  /v1/caseTemplate:
    post:
      tags: [CaseTemplate]
      summary: Create a case template
      operationId: createCaseTemplate
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCaseTemplate'
      responses:
        '201':
          description: Case template created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseTemplate'
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/caseTemplate/{case_template_id}:
    get:
      tags: [CaseTemplate]
      summary: Get a case template by ID
      operationId: getCaseTemplateById
      parameters:
        - $ref: '#/components/parameters/CaseTemplateIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '200':
          description: Case template details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputCaseTemplate'
        '404': { $ref: '#/components/responses/NotFound' }
    patch:
      tags: [CaseTemplate]
      summary: Update a case template
      operationId: updateCaseTemplate
      parameters:
        - $ref: '#/components/parameters/CaseTemplateIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCaseTemplate' 
      responses:
        '204': { $ref: '#/components/responses/UpdateSuccess' }
        '400': { $ref: '#/components/responses/BadRequest' }
    delete:
      tags: [CaseTemplate]
      summary: Delete a case template
      operationId: deleteCaseTemplate
      parameters:
        - $ref: '#/components/parameters/CaseTemplateIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204': { $ref: '#/components/responses/DeletionSuccess' }
        '404': { $ref: '#/components/responses/NotFound' }

  /v1/alert/{alert_id}/comment:
    post:
      tags: [Comment]
      summary: Create a comment in an alert
      operationId: createAlertComment
      parameters:
        - $ref: '#/components/parameters/AlertIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
      responses:
        '201':
          description: Comment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputComment'
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/case/{case_id}/comment:
    post:
      tags: [Comment]
      summary: Create a comment in a case
      operationId: createCaseComment
      parameters:
        - $ref: '#/components/parameters/CaseIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComment'
      responses:
        '201':
          description: Comment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputComment'
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/comment/{comment_id}:
    patch:
      tags: [Comment]
      summary: Update a comment
      operationId: updateComment
      parameters:
        - $ref: '#/components/parameters/CommentIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateComment'
      responses:
        '204': { $ref: '#/components/responses/UpdateSuccess' }
        '400': { $ref: '#/components/responses/BadRequest' }
    delete:
      tags: [Comment]
      summary: Delete a comment
      operationId: deleteComment
      parameters:
        - $ref: '#/components/parameters/CommentIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204': { $ref: '#/components/responses/DeletionSuccess' }
        '404': { $ref: '#/components/responses/NotFound' }

  /v1/query:
    post:
      tags: [Query]
      summary: Find entities using a flexible query
      description: |
        Generic endpoint to query various TheHive entities.
        The structure of the response depends on the `name` query parameter and the query itself.
      operationId: findEntitiesByQuery
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader'
        - name: name
          in: query
          required: false 
          description: The type of entity or pre-defined query to run (e.g., "alerts", "cases", "alert-observables").
          schema:
            type: string
          examples:
            alerts: { value: "alerts", summary: "Query for alerts" }
            cases: { value: "cases", summary: "Query for cases" }
            alertObservables: { value: "alert-observables", summary: "Query for observables in an alert" }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputQuery'
      responses:
        '200':
          description: A list of entities or a count, matching the query.
          content:
            application/json:
              schema:
                oneOf: 
                  - type: array
                    items:
                      type: object 
                  - type: integer 
                  - type: object 
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/user:
    post:
      tags: [User]
      summary: Create a new user
      operationId: createUser
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader' 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUser'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/user/current:
    get:
      tags: [User]
      summary: Get current authenticated user's details
      operationId: getCurrentUser
      parameters:
        - $ref: '#/components/parameters/OrganisationHeader' 
      responses:
        '200':
          description: Current user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '401': { $ref: '#/components/responses/Unauthorized' }

  /v1/user/{user_id}:
    get:
      tags: [User]
      summary: Get user details by ID
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader' 
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputUser'
        '404': { $ref: '#/components/responses/NotFound' }
    patch:
      tags: [User]
      summary: Update user details
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUpdateUser'
      responses:
        '204': { $ref: '#/components/responses/UpdateSuccess' }
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/user/{user_id}/force: 
    delete:
      tags: [User]
      summary: Delete a user (force)
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - name: organisation 
          in: query
          schema:
            type: string
          required: false
        - $ref: '#/components/parameters/OrganisationHeader' 
      responses:
        '204': { $ref: '#/components/responses/DeletionSuccess' }
        '404': { $ref: '#/components/responses/NotFound' }

  /v1/user/{user_id}/organisations:
    put:
      tags: [User]
      summary: Set user's organisations and profiles
      operationId: setUserOrganisations
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organisations:
                  type: array
                  items:
                    $ref: '#/components/schemas/InputUserOrganisation'
      responses:
        '200': 
          description: User organisations set
          content:
            application/json:
              schema:
                type: object 
                properties:
                  organisations:
                    type: array
                    items:
                      $ref: '#/components/schemas/OutputUserOrganisation'
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/user/{user_id}/password/set:
    post:
      tags: [User]
      summary: Set a user's password
      operationId: setUserPassword
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [password]
              properties:
                password:
                  type: string
                  format: password
      responses:
        '204':
          description: Password set successfully
        '400': { $ref: '#/components/responses/BadRequest' }

  /v1/user/{user_id}/key:
    get:
      tags: [User]
      summary: Get user's API key
      operationId: getUserApiKey
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '200':
          description: API Key string
          content:
            text/plain: 
              schema:
                type: string
        '404': { $ref: '#/components/responses/NotFound' }
    delete:
      tags: [User]
      summary: Remove user's API key
      operationId: removeUserApiKey
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '204':
          description: API Key removed
        '404': { $ref: '#/components/responses/NotFound' }

  /v1/user/{user_id}/key/renew:
    post:
      tags: [User]
      summary: Renew user's API key
      operationId: renewUserApiKey
      parameters:
        - $ref: '#/components/parameters/UserIdPathParameter'
        - $ref: '#/components/parameters/OrganisationHeader'
      responses:
        '200':
          description: New API Key string
          content:
            text/plain: 
              schema:
                type: string
        '404': { $ref: '#/components/responses/NotFound' }

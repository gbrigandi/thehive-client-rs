/*
 * TheHive API
 *
 * Comprehensive OpenAPI specification inferred from the TheHive4py client library. This API allows interaction with TheHive platform for managing alerts, cases, observables, tasks, users, and other entities. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InputUpdateOrganisation {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "taskRule", skip_serializing_if = "Option::is_none")]
    pub task_rule: Option<String>,
    #[serde(rename = "observableRule", skip_serializing_if = "Option::is_none")]
    pub observable_rule: Option<String>,
    #[serde(rename = "locked", skip_serializing_if = "Option::is_none")]
    pub locked: Option<bool>,
    #[serde(rename = "avatar", skip_serializing_if = "Option::is_none")]
    pub avatar: Option<String>,
}

impl InputUpdateOrganisation {
    pub fn new() -> InputUpdateOrganisation {
        InputUpdateOrganisation {
            name: None,
            description: None,
            task_rule: None,
            observable_rule: None,
            locked: None,
            avatar: None,
        }
    }
}


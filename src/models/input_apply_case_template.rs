/*
 * TheHive API
 *
 * Comprehensive OpenAPI specification inferred from the TheHive4py client library. This API allows interaction with TheHive platform for managing alerts, cases, observables, tasks, users, and other entities. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InputApplyCaseTemplate {
    #[serde(rename = "ids")]
    pub ids: Vec<String>,
    #[serde(rename = "caseTemplate")]
    pub case_template: String,
    #[serde(rename = "updateTitlePrefix", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_title_prefix: Option<Option<bool>>,
    #[serde(rename = "updateDescription", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_description: Option<Option<bool>>,
    #[serde(rename = "updateTags", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_tags: Option<Option<bool>>,
    #[serde(rename = "updateSeverity", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_severity: Option<Option<bool>>,
    #[serde(rename = "updateFlag", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_flag: Option<Option<bool>>,
    #[serde(rename = "updateTlp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_tlp: Option<Option<bool>>,
    #[serde(rename = "updatePap", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_pap: Option<Option<bool>>,
    #[serde(rename = "updateCustomFields", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub update_custom_fields: Option<Option<bool>>,
    #[serde(rename = "importTasks", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub import_tasks: Option<Option<Vec<String>>>,
    #[serde(rename = "importPages", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub import_pages: Option<Option<Vec<String>>>,
}

impl InputApplyCaseTemplate {
    pub fn new(ids: Vec<String>, case_template: String) -> InputApplyCaseTemplate {
        InputApplyCaseTemplate {
            ids,
            case_template,
            update_title_prefix: None,
            update_description: None,
            update_tags: None,
            update_severity: None,
            update_flag: None,
            update_tlp: None,
            update_pap: None,
            update_custom_fields: None,
            import_tasks: None,
            import_pages: None,
        }
    }
}


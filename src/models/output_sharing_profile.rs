/*
 * TheHive API
 *
 * Comprehensive OpenAPI specification inferred from the TheHive4py client library. This API allows interaction with TheHive platform for managing alerts, cases, observables, tasks, users, and other entities. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OutputSharingProfile {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "autoShare")]
    pub auto_share: bool,
    #[serde(rename = "editable")]
    pub editable: bool,
    #[serde(rename = "permissionProfile")]
    pub permission_profile: String,
    #[serde(rename = "taskRule")]
    pub task_rule: String,
    #[serde(rename = "observableRule")]
    pub observable_rule: String,
}

impl OutputSharingProfile {
    pub fn new(name: String, description: String, auto_share: bool, editable: bool, permission_profile: String, task_rule: String, observable_rule: String) -> OutputSharingProfile {
        OutputSharingProfile {
            name,
            description,
            auto_share,
            editable,
            permission_profile,
            task_rule,
            observable_rule,
        }
    }
}


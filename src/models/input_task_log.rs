/*
 * TheHive API
 *
 * Comprehensive OpenAPI specification inferred from the TheHive4py client library. This API allows interaction with TheHive platform for managing alerts, cases, observables, tasks, users, and other entities. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InputTaskLog {
    #[serde(rename = "message")]
    pub message: String,
    #[serde(rename = "startDate", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<Option<i64>>,
    #[serde(rename = "includeInTimeline", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub include_in_timeline: Option<Option<bool>>,
}

impl InputTaskLog {
    pub fn new(message: String) -> InputTaskLog {
        InputTaskLog {
            message,
            start_date: None,
            include_in_timeline: None,
        }
    }
}


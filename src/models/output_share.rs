/*
 * TheHive API
 *
 * Comprehensive OpenAPI specification inferred from the TheHive4py client library. This API allows interaction with TheHive platform for managing alerts, cases, observables, tasks, users, and other entities. 
 *
 * The version of the OpenAPI document: 2.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OutputShare {
    #[serde(rename = "_id")]
    pub _id: String,
    #[serde(rename = "_type")]
    pub _type: String,
    #[serde(rename = "_createdBy")]
    pub _created_by: String,
    #[serde(rename = "_createdAt")]
    pub _created_at: i64,
    #[serde(rename = "_updatedBy", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub _updated_by: Option<Option<String>>,
    #[serde(rename = "_updatedAt", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub _updated_at: Option<Option<i64>>,
    #[serde(rename = "caseId")]
    pub case_id: String,
    #[serde(rename = "profileName")]
    pub profile_name: String,
    #[serde(rename = "organisationName")]
    pub organisation_name: String,
    #[serde(rename = "owner")]
    pub owner: bool,
    #[serde(rename = "taskRule")]
    pub task_rule: String,
    #[serde(rename = "observableRule")]
    pub observable_rule: String,
}

impl OutputShare {
    pub fn new(_id: String, _type: String, _created_by: String, _created_at: i64, case_id: String, profile_name: String, organisation_name: String, owner: bool, task_rule: String, observable_rule: String) -> OutputShare {
        OutputShare {
            _id,
            _type,
            _created_by,
            _created_at,
            _updated_by: None,
            _updated_at: None,
            case_id,
            profile_name,
            organisation_name,
            owner,
            task_rule,
            observable_rule,
        }
    }
}

